plugins {
    id "java-library"
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}


def allureVersion = "2.14.0"
def selenideVersion = "5.24.0"
def junitVersion = "5.8.2"



allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    //configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    testImplementation "org.aspectj:aspectjweaver:1.9.6"

    testImplementation "com.codeborne:selenide:$selenideVersion"
    implementation "io.qameta.allure:allure-selenide:$allureVersion"

    testImplementation "org.assertj:assertj-core:3.21.0"
    testRuntimeOnly "org.slf4j:slf4j-simple:1.7.32"
    testImplementation "org.aeonbits.owner:owner:1.0.12"
    testImplementation "com.github.javafaker:javafaker:1.0.2"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task mainpage(type: Test) {
    useJUnitPlatform {
        includeTags 'mainpage'
    }
}

test {
    useJUnitPlatform()
}
